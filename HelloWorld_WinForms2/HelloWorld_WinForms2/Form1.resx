<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="KaydetBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAUfSURBVFhH7ZZrUFRlHMZViGr6UM6YM42OeckaG8M7pKQipZSmNamUN0zRNNHGaRizrLwNpEID
        Khl4D1FD0XUJWFaWyy5y16VtuSNgXF3ZZXfZ3bPAAE/nf+ZcRPvUGetLz8xv5p0573l+7855z9l3yP8R
        kh8c6s7b+AUe5Z5SJZtHO4tWhjTzWim6DTvgvJ4Od+EddBfrOTq0Bejv7UWfi5EF9VCfu+A2nNfSQC5e
        K0X76Xa480u4SQINKSr0ulzo7rTKgnrE3lvFIBevlZK7PpS7yOTki9RfVaK3ywHmQYcsqEfodOcVg1y8
        VkpO8DYw2kK4VNkidxOvsr/ABldruyyoR+hkcgtALl4rJXvd59wKnQqVSN2ZRLg7zHA03JMF9QidTNYt
        kIvXSslau5W9mAfH5RsitSfOwt1ugr26ThbUI3QymVqQi9dK0azZAuamFl3nkkRqon8G09IGq6FCFtQj
        dLrUuSAXr5WSufoz7hnZ4xJEqg8fg6uxCZ0lellQj9DpSs8CuXitlJurNsOVpoEt5pRI1YFIOGrrufdY
        DtQjdLpSM0EuXitF/ckmOFPUsB6KFancE46u8mqYMrJlQT1Cp1OpBrl4rZSMj0O4Xdq570eRirC9sJcZ
        0X49TRbUI3TS15ZcvFaKKmgj95m07A4XKd++G9biO2i9mCwL6hE6ncmpIBevlZK+cgMcV1LQsfN7EePm
        L9GpK5QN9QidjiQlyMVrpaQuX48u9j01bf1KxBgcCsO6bbKhHqGz65IC5OK1UhQfroX1QjKagnc8UchB
        Ll4rJWnZKpjPJ6FuRcgThRzk4rVSEhcHwXTmEiqWrBapCtqMmnWhsqEeodN0+iLIxWulnH13OdpOXoA+
        4CMRw8oQJPu/j1/nBP5j6H5j0Caxsy0+AeTitVLiF36AphPnUDRnsUjp0jU47+2HhzMwMID+/n709fWh
        p6cHDMPA4XDAarPBbLYgZtIs7h6BX6bOhX7ZWrGTHOTitVJiA5ai8fhp6KYFiBQuXIFTr83kpJETpogw
        bjcrdcJms8NsscBkeoDW1jb82dTMXad7HoZ6hE5ykIvXSome/x7qj55E5utzRHTzl+HEOG/0sufCiDGT
        uDFhsXTCxJ502tra0cRKG9j//Nq6u6isqh40T4B6hE5ykIvXSomcuwjVMXHQ+C5C2vjpHJrZgTg6ehLs
        9i4ceGkiNyaamlvQ2MgeNOrqUVVVA6OxAvoyA0pK7wyaJ0A9QmdtdBzIxWulRL35tl0RtgfGiGiopvlD
        MWoyVDMCEDlyAtrb7+O7EWO5MVFVzUrLK1H2+x+ctKCQPWjqbkGTlTNongD1UB9RGRWL8NnvPL6AsvE+
        gRE+/t3Xd+6G4WAklJP9oPR+CxHDX8bd+gZ8/cJobkyU3tajsKgEurx8ZGXnIkOdid9S03FNoRw0T4B6
        kka+ymE8cgz7fBc8vgCKfvyswP0z5/Vk7D8EPfsfrpixAAeHj4HBYMSu50dxYyI7Rwv1TQ1S01RQ3EhB
        0pVkJF68jLPnEwbNE7j2hh8uvDiRw8Au4FufeX+/ADYeunEzln/j69+j3BsB/U+nof4hCja7HVarDZ3s
        GZ92fYfZjAfsJrxvMnGPhzZjS2srmtm9oTkeB21svAjdTz1Fh2M4So8cxa7pftIChg4d+uywYcNGeHp6
        vuLl5eXLMjdh7JSwLd4+vRun+uBJEDZ5lsXDw2MM636O1uDJDp5i8WJ55l/iaRYvctMC/sMMGfIXPPj3
        lZOEmQAAAAAASUVORK5CYII=
</value>
  </data>
</root>